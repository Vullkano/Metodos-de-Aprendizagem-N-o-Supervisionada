my_skim() %>%
knitr::kable(digits=2, caption = 'Descriptives with histogram', col.names = c("Scale of Measurement","Item","$N_{missing}$","Complete prop.", "$M$","$SD$","$Min$","$P_{25}$", "$Mdn$","$P_{75}$", "$Max$", "Histogram","$SEM$", "$CV$","$Mode$", "$sk$","$ku$"), )
colnames(IrlandaImput)
# A variável GRADE faz com que o teste KMO dê erro (variável muito desiquilibrada)
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("GRADE", "INFOJOB2", "ICTOUTSIDE", "ICTCLASS", "COMPETE", "ATTLNACT", "DISCLIMA", "ENTUSE", "ICTSCH", "REPEAT")
IrlandaImput <- IrlandaImput[, -which(names(IrlandaImput) %in% Apagar)]
CorrIrlandaImput <- cor(IrlandaImput)
kmo_result <- KMO(IrlandaImput)
kmo_result
# Obtém as variáveis com KMO abaixo de 0.5
MelhorKMO <- names(kmo_result$MSAi)[kmo_result$MSAi > 0.5]
IrlandaImput <- IrlandaImput[, which(names(IrlandaImput) %in% MelhorKMO)]
correlation <- cor(IrlandaImput)
corrplot(correlation,
type = "upper",
tl.cex = 0.55,
addshade = "positive") # show only upper part
# Variância acumulada
variance <- apply(IrlandaImput, 2, var)
cumulative_variance <- cumsum(variance)
cumulative_variance
cortest.bartlett(IrlandaImput)
data_scaled <- scale(IrlandaImput)
data_scaled %>% glimpse()
# Dúvida: Estandardizamos os dados de variáveis que não têm distribuição normal?
dim(data_scaled)
pc1 <- principal(data_scaled, nfactors=20, rotate="none")
valores <- round(pc1$values,3)
valores
length(valores[valores > 1])
plot(pc1$values, type = "b", main = "Scree plot for Ireland dataset",
xlab = "Number of PC", ylab = "Eigenvalue")
pc12 <- principal(data_scaled, nfactors = 6, rotate = "none")
pc12$loadings
round(pc12$communality,2)
# interessante
pc12r <- principal(data_scaled, nfactors= 6, rotate="varimax")
pc12r$loadings
round(pc12r$communality,2)
pc12o <- principal(data_scaled, nfactors= 6, rotate="oblimin")
pc12o$loadings
round(pc12o$communality,2)
pc12pro <- principal(data_scaled, nfactors= 6, rotate="promax")
pc12pro$loadings
round(pc12pro$communality,2)
pc12qua <- principal(data_scaled, nfactors= 6, rotate="quartimin")
pc12qua$loadings
round(pc12qua$communality,2)
pc12equ <- principal(data_scaled, nfactors= 6, rotate="equamax")
pc12equ$loadings
round(pc12equ$communality,2)
pc7 <- principal(data_scaled, nfactors = 7, rotate = "none")
pc7$loadings
round(pc7$communality,2)
pc7r <- principal(data_scaled, nfactors= 7, rotate="varimax")
pc7r$loadings
round(pc7r$communality,2)
pc7o <- principal(data_scaled, nfactors= 7, rotate="oblimin")
pc7o$loadings
round(pc7o$communality,2)
pc7pro <- principal(data_scaled, nfactors= 7, rotate="promax")
pc7pro$loadings
round(pc7pro$communality,2)
pc7qua <- principal(data_scaled, nfactors= 7, rotate="quartimin")
pc7qua$loadings
round(pc7qua$communality,2)
pc7equ <- principal(data_scaled, nfactors= 7, rotate="equamax")
pc7equ$loadings
round(pc12equ$communality,2)
pc6sc <- principal(data_scaled, nfactors = 6, rotate = "varimax", scores = TRUE)
round(pc6sc$scores,3)
mean(pc6sc$scores[,1])
sd(pc6sc$scores[,1])
<<<<<<< HEAD
pacman::p_load(
"sjstats", "plotrix", "skimr", "viridis",
"txtplot", "cluster", "tidyverse", "RColorBrewer",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest", "GPArotation",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
IrlandaImputInc <- read_rds("IrlandaImput.rds")
# Dúvidas em relação às seguintes variáveis: ISCEDL, IMMIG, REPEAT
Perfil <- c("ST004D01T", "AGE", "IMMIG", "HISCED", "FISCED", "MISCED", "ISCEDL")
IrlandaImput <- IrlandaImputInc[, -which(names(IrlandaImputInc) %in% Perfil)]
my_skim <- skim_with(numeric = sfl("SEM" = plotrix::std.error,
"CV" = sjstats::cv,
"Mode" = ~ modeest::mlv1(., na.rm = T, method = "mfv"),
"sk" = ~ PerformanceAnalytics::skewness(.,na.rm=T,method = "sample"),
"ku" = ~ PerformanceAnalytics::kurtosis(., na.rm = T, method = "sample_excess")),
append = T)
IrlandaImput[, sapply(IrlandaImput, is.numeric)] %>%
my_skim() %>%
knitr::kable(digits=2, caption = 'Descriptives with histogram', col.names = c("Scale of Measurement","Item","$N_{missing}$","Complete prop.", "$M$","$SD$","$Min$","$P_{25}$", "$Mdn$","$P_{75}$", "$Max$", "Histogram","$SEM$", "$CV$","$Mode$", "$sk$","$ku$"), )
colnames(IrlandaImput)
# A variável GRADE faz com que o teste KMO dê erro (variável muito desiquilibrada)
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("GRADE", "INFOJOB2", "ICTOUTSIDE", "ICTCLASS", "COMPETE", "ATTLNACT", "DISCLIMA", "ENTUSE", "ICTSCH", "REPEAT")
IrlandaImput <- IrlandaImput[, -which(names(IrlandaImput) %in% Apagar)]
CorrIrlandaImput <- cor(IrlandaImput)
kmo_result <- KMO(IrlandaImput)
kmo_result
# Obtém as variáveis com KMO abaixo de 0.5
MelhorKMO <- names(kmo_result$MSAi)[kmo_result$MSAi > 0.5]
IrlandaImput <- IrlandaImput[, which(names(IrlandaImput) %in% MelhorKMO)]
correlation <- cor(IrlandaImput)
corrplot(correlation,
type = "upper",
tl.cex = 0.55,
addshade = "positive") # show only upper part
# Variância acumulada
variance <- apply(IrlandaImput, 2, var)
cumulative_variance <- cumsum(variance)
cumulative_variance
cortest.bartlett(IrlandaImput)
data_scaled <- scale(IrlandaImput)
data_scaled %>% glimpse()
# Dúvida: Estandardizamos os dados de variáveis que não têm distribuição normal?
dim(data_scaled)
pc1 <- principal(data_scaled, nfactors=20, rotate="none")
valores <- round(pc1$values,3)
valores
length(valores[valores > 1])
plot(pc1$values, type = "b", main = "Scree plot for Ireland dataset",
xlab = "Number of PC", ylab = "Eigenvalue")
pc12 <- principal(data_scaled, nfactors = 6, rotate = "none")
pc12$loadings
round(pc12$communality,2)
# interessante
pc12r <- principal(data_scaled, nfactors= 6, rotate="varimax")
pc12r$loadings
round(pc12r$communality,2)
pc12o <- principal(data_scaled, nfactors= 6, rotate="oblimin")
pc12o$loadings
round(pc12o$communality,2)
pc12pro <- principal(data_scaled, nfactors= 6, rotate="promax")
pc12pro$loadings
round(pc12pro$communality,2)
pc12qua <- principal(data_scaled, nfactors= 6, rotate="quartimin")
pc12qua$loadings
round(pc12qua$communality,2)
pc12equ <- principal(data_scaled, nfactors= 6, rotate="equamax")
pc12equ$loadings
round(pc12equ$communality,2)
pc7 <- principal(data_scaled, nfactors = 7, rotate = "none")
pc7$loadings
round(pc7$communality,2)
pc7r <- principal(data_scaled, nfactors= 7, rotate="varimax")
pc7r$loadings
round(pc7r$communality,2)
pc7o <- principal(data_scaled, nfactors= 7, rotate="oblimin")
pc7o$loadings
round(pc7o$communality,2)
pc7pro <- principal(data_scaled, nfactors= 7, rotate="promax")
pc7pro$loadings
round(pc7pro$communality,2)
pc7qua <- principal(data_scaled, nfactors= 7, rotate="quartimin")
pc7qua$loadings
round(pc7qua$communality,2)
pc7equ <- principal(data_scaled, nfactors= 7, rotate="equamax")
pc7equ$loadings
round(pc12equ$communality,2)
pc6sc <- principal(data_scaled, nfactors = 6, rotate = "varimax", scores = TRUE)
round(pc6sc$scores,3)
mean(pc6sc$scores[,1])
sd(pc6sc$scores[,1])
IrlandaImput$SA <- pc6sc$scores[,1] # RC1 - Sucesso Académico
IrlandaImput$ESE <- pc6sc$scores[,2] # RC3 - Estatuto socio-económico
IrlandaImput$APP <- pc6sc$scores[,3] # RC2 - Apoio por parte do professor
IrlandaImput$ABEI <- pc6sc$scores[,4] # RC4 - Alegria e bem-estar interior
IrlandaImput$NEIC <- pc6sc$scores[,5] # RC5 - Nível de educação e informação sobre carreiras
IrlandaImput$ME <- pc6sc$scores[,6] # RC6 - Mudança de escola
dim(IrlandaImput)
IrlandaImput[, 37:42]
IrlandaFinal<- IrlandaImputInc %>% select("ST004D01T", "AGE", "IMMIG", "HISCED", "FISCED", "MISCED", "ISCEDL")
IrlandaFinal <- IrlandaFinal %>%
bind_cols(IrlandaImput[, 37:42])
IrlandaFinal
IrlandaFinal[8:12]
corr <- cor(IrlandaImput[, 37:42])
par(oma = c(2, 2, 2, 2))   # space rounf the graph
corrplot.mixed(corr,
order = "hclust",
tl.pos = "lt",
upper = "ellipse")
pc_dist <- dist(IrlandaImput[, 37:42])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k = 3)
rect.hclust(hclust, k = 3, border="red")
# 4 ou 5 clusters?
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaImput[, 37:42])
hclust  <- hclust(pc_dist, method='complete')
plot(hclust, hang=-1, labels=FALSE)
groups.k5_c <- cutree(hclust, k=2)
rect.hclust(hclust, k=2, border="red")
plot(silhouette(groups.k5_c, pc_dist))
table(groups.k5,groups.k5_c)
# K-Means: number of clusters
wssplot <- function(xx, nc=15, seed=1234){
wss <- (nrow(xx)-1)*sum(apply(xx,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(xx, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
wssplot(IrlandaImput[, 37:42], nc=10)
#K-means cluster com K=2
kmeans.k6 <- kmeans(IrlandaImput[, 37:42], 3, nstart=100)
IrlandaImput = IrlandaImput %>% mutate(cluster = kmeans.k6$cluster)
table(groups.k5, IrlandaImput$cluster)
# Barplot of average score in each principal component within each cluster
barplot(colMeans(subset(IrlandaImput,cluster==1)[,37:42]),main= "Cluster 1 - Average score in each principal component", cex.names = 0.70)
barplot(colMeans(subset(IrlandaImput,cluster==2)[,37:42]),main= "Cluster 2 - Average score in each principal component", cex.names = 0.70)
barplot(colMeans(subset(IrlandaImput,cluster==3)[,37:42]),main= "Cluster 3 - Average score in each principal component",  cex.names = 0.70)
IrlandaFinal[,1:7]
IrlandaImput <- cbind(IrlandaImput, IrlandaFinal[, 1:7])
IrlandaImput[, 43:50]
prop.table(table(subset(IrlandaImput,cluster==2)[,46]))
IrlandaImput %>% select(IMMIG) %>% unique()
barplot(prop.table(table(subset(IrlandaImput,cluster==2)[, 46])),main= "Cluster 2 vs. IMMIG")
barplot(prop.table(table(subset(IrlandaImput,cluster==3)["HISCED"])),main= "Cluster 2 vs. HISCED")
IrlandaImput[,37:42]
std_data <- scale(IrlandaImput[,37:42])
pam.k4 <- pam(std_data, 3)
table(groups.k5,pam.k4$clustering)
clusplot(pam.k4, labels = T, col.p = pam.k4$clustering)
data <- IrlandaImput[,37:42]
BIC <- mclustBIC(data)
plot(BIC)
### GMM
set.seed(1233)
# Apply GMM with 2 components
results.G6 <- Mclust(data, G = 3)
summary(results.G6, parameters = TRUE)
# Some results
results.G6$modelName          # Optimal selected model
results.G6$G                  # Optimal number of cluster
head(results.G6$z, 5)         # Probability to belong to a given cluster
head(results.G6$classification, 5) # Cluster assignment of each observation
# select VVE -> Variable Volume, Variable shape, Equal Orientation
plot(results.G6, what = "classification")
plot(results.G6, what = "uncertainty",)
pacman::p_load(
"sjstats", "plotrix", "skimr", "viridis",
"txtplot", "cluster", "tidyverse", "RColorBrewer",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest", "GPArotation",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
IrlandaNoImputInc <- read_rds("IrlandaNoImput.rds")
# Dúvidas em relação às seguintes variáveis: ISCEDL, IMMIG, REPEAT
Perfil <- c("ST004D01T", "AGE", "IMMIG", "HISCED", "FISCED", "MISCED", "ISCEDL")
IrlandaNoImput <- IrlandaNoImputInc[, -which(names(IrlandaNoImputInc) %in% Perfil)]
my_skim <- skim_with(numeric = sfl("SEM" = plotrix::std.error,
"CV" = sjstats::cv,
"Mode" = ~ modeest::mlv1(., na.rm = T, method = "mfv"),
"sk" = ~ PerformanceAnalytics::skewness(.,na.rm=T,method = "sample"),
"ku" = ~ PerformanceAnalytics::kurtosis(., na.rm = T, method = "sample_excess")),
append = T)
IrlandaNoImput[, sapply(IrlandaNoImput, is.numeric)] %>%
my_skim() %>%
knitr::kable(digits=2, caption = 'Descriptives with histogram', col.names = c("Scale of Measurement","Item","$N_{missing}$","Complete prop.", "$M$","$SD$","$Min$","$P_{25}$", "$Mdn$","$P_{75}$", "$Max$", "Histogram","$SEM$", "$CV$","$Mode$", "$sk$","$ku$"), )
colnames(IrlandaNoImput)
# A variável GRADE faz com que o teste KMO dê erro (variável muito desiquilibrada)
# Aqui serão apagadas todas as variáveis que, ou podem ser substituidas, ou não tem valor nenhum
Apagar <- c("GRADE", "INFOJOB2", "ICTOUTSIDE", "ICTCLASS", "COMPETE", "ATTLNACT", "DISCLIMA", "ENTUSE", "ICTSCH", "REPEAT")
IrlandaNoImput <- IrlandaNoImput[, -which(names(IrlandaNoImput) %in% Apagar)]
CorrIrlandaNoImput <- cor(IrlandaNoImput)
kmo_result <- KMO(IrlandaNoImput)
kmo_result
# Obtém as variáveis com KMO abaixo de 0.5
MelhorKMO <- names(kmo_result$MSAi)[kmo_result$MSAi > 0.5]
IrlandaNoImput <- IrlandaNoImput[, which(names(IrlandaNoImput) %in% MelhorKMO)]
correlation <- cor(IrlandaNoImput)
corrplot(correlation,
type = "upper",
tl.cex = 0.55,
addshade = "positive") # show only upper part
# Variância acumulada
variance <- apply(IrlandaNoImput, 2, var)
cumulative_variance <- cumsum(variance)
cumulative_variance
cortest.bartlett(IrlandaNoImput)
data_scaled <- scale(IrlandaNoImput)
data_scaled %>% glimpse()
# Dúvida: Estandardizamos os dados de variáveis que não têm distribuição normal?
dim(data_scaled)
pc1 <- principal(data_scaled, nfactors=20, rotate="none")
valores <- round(pc1$values,3)
valores
length(valores[valores > 1])
plot(pc1$values, type = "b", main = "Scree plot for Ireland dataset",
xlab = "Number of PC", ylab = "Eigenvalue")
pc12 <- principal(data_scaled, nfactors = 6, rotate = "none")
pc12$loadings
round(pc12$communality,2)
# interessante
pc12r <- principal(data_scaled, nfactors= 6, rotate="varimax")
pc12r$loadings
round(pc12r$communality,2)
pc12o <- principal(data_scaled, nfactors= 6, rotate="oblimin")
pc12o$loadings
round(pc12o$communality,2)
pc12pro <- principal(data_scaled, nfactors= 6, rotate="promax")
pc12pro$loadings
round(pc12pro$communality,2)
pc12qua <- principal(data_scaled, nfactors= 6, rotate="quartimin")
pc12qua$loadings
round(pc12qua$communality,2)
pc12equ <- principal(data_scaled, nfactors= 6, rotate="equamax")
pc12equ$loadings
round(pc12equ$communality,2)
pc7 <- principal(data_scaled, nfactors = 7, rotate = "none")
pc7$loadings
round(pc7$communality,2)
pc7r <- principal(data_scaled, nfactors= 7, rotate="varimax")
pc7r$loadings
round(pc7r$communality,2)
pc7o <- principal(data_scaled, nfactors= 7, rotate="oblimin")
pc7o$loadings
round(pc7o$communality,2)
pc7pro <- principal(data_scaled, nfactors= 7, rotate="promax")
pc7pro$loadings
round(pc7pro$communality,2)
pc7qua <- principal(data_scaled, nfactors= 7, rotate="quartimin")
pc7qua$loadings
round(pc7qua$communality,2)
pc7equ <- principal(data_scaled, nfactors= 7, rotate="equamax")
pc7equ$loadings
round(pc12equ$communality,2)
pc6sc <- principal(data_scaled, nfactors = 6, rotate = "varimax", scores = TRUE)
round(pc6sc$scores,3)
mean(pc6sc$scores[,1])
sd(pc6sc$scores[,1])
IrlandaNoImput$SA <- pc6sc$scores[,1] # RC1 - Sucesso Académico
IrlandaNoImput$ESE <- pc6sc$scores[,2] # RC3 - Estatuto socio-económico
IrlandaNoImput$APP <- pc6sc$scores[,3] # RC2 - Apoio por parte do professor
IrlandaNoImput$ABEI <- pc6sc$scores[,4] # RC4 - Alegria e bem-estar interior
IrlandaNoImput$NEIC <- pc6sc$scores[,5] # RC5 - Nível de educação e informação sobre carreiras
IrlandaNoImput$ME <- pc6sc$scores[,6] # RC6 - Mudança de escola
dim(IrlandaNoImput)
IrlandaNoImput[, 37:42]
IrlandaFinal<- IrlandaNoImputInc %>% select("ST004D01T", "AGE", "IMMIG", "HISCED", "FISCED", "MISCED", "ISCEDL")
IrlandaFinal <- IrlandaFinal %>%
bind_cols(IrlandaNoImput[, 37:42])
IrlandaFinal
corr <- cor(IrlandaNoImput[, 37:42])
par(oma = c(2, 2, 2, 2))   # space rounf the graph
corrplot.mixed(corr,
order = "hclust",
tl.pos = "lt",
upper = "ellipse")
pc_dist <- dist(IrlandaNoImput[, 37:42])
hclust  <- hclust(pc_dist, method='ward.D2')
plot(hclust, hang=-1, labels=FALSE)
groups.k5 <- cutree(hclust, k = 3)
rect.hclust(hclust, k = 3, border="red")
# 4 ou 5 clusters?
plot(silhouette(groups.k5, pc_dist))
pc_dist <- dist(IrlandaNoImput[, 37:42])
hclust  <- hclust(pc_dist, method='complete')
plot(hclust, hang=-1, labels=FALSE)
groups.k5_c <- cutree(hclust, k=3)
rect.hclust(hclust, k=3, border="red")
plot(silhouette(groups.k5_c, pc_dist))
table(groups.k5,groups.k5_c)
# K-Means: number of clusters
wssplot <- function(xx, nc=15, seed=1234){
wss <- (nrow(xx)-1)*sum(apply(xx,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(xx, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
wssplot(IrlandaNoImput[, 37:42], nc=10)
#K-means cluster com K=2
kmeans.k6 <- kmeans(IrlandaNoImput[, 37:42], 3, nstart=100)
IrlandaNoImput = IrlandaNoImput %>% mutate(cluster = kmeans.k6$cluster)
table(groups.k5, IrlandaNoImput$cluster)
#Barplot of average score in each principal component within each cluster
barplot(colMeans(subset(IrlandaNoImput,cluster==1)[,37:42]),main= "Cluster 1 - Average score in each principal component", cex.names = 0.70)
barplot(colMeans(subset(IrlandaNoImput,cluster==2)[,37:42]),main= "Cluster 2 - Average score in each principal component", cex.names = 0.70)
barplot(colMeans(subset(IrlandaNoImput,cluster==3)[,37:42]),main= "Cluster 3 - Average score in each principal component",  cex.names = 0.70)
# barplot(colMeans(subset(IrlandaNoImput,cluster==4)[,44:49]),main= "Cluster 4 - Average score in each principal component", cex.names = 0.70)
# barplot(colMeans(subset(IrlandaNoImput,cluster==5)[,44:49]),main= "Cluster 5 - Average score in each principal component", cex.names = 0.70)
# barplot(colMeans(subset(IrlandaNoImput,cluster==6)[,44:49]),main= "Cluster 6 - Average score in each principal component", cex.names = 0.70)
std_data <- scale(IrlandaNoImput[,37:42])
pam.k4 <- pam(std_data, 3)
table(groups.k5,pam.k4$clustering)
clusplot(pam.k4, labels = F, col.p = pam.k4$clustering)
data <- IrlandaNoImput[,37:42]
BIC <- mclustBIC(data)
plot(BIC)
### GMM
set.seed(1233)
# Apply GMM with 2 components
results.G6 <- Mclust(data, G = 3)
summary(results.G6, parameters = TRUE)
# Some results
results.G6$modelName          # Optimal selected model
results.G6$G                  # Optimal number of cluster
head(results.G6$z, 5)         # Probability to belong to a given cluster
head(results.G6$classification, 5) # Cluster assignment of each observation
# select VVE -> Variable Volume, Variable Shape, Equal Axes
plot(results.G6, what = "classification")
plot(results.G6, what = "uncertainty")
pacman::p_load(
"sjstats", "plotrix", "skimr",
"txtplot", "cluster", "tidyverse",
"caret", "factoextra", "mclust", "htmlTable",
"readr", "naniar", "here", "modeest",
"psych", "corrplot", "haven", "kableExtra",
"haven", "dplyr" , "magrittr", "mice"
)
options(repr.plot.width=6, repr.plot.height=6)
dados <- readRDS(here("data", "STU_QQQ_5.rds"))
dados %>%
dplyr::filter(CNT == "IRL") %>%
zap_labels()-> Irlanda
tabela_estilo <- kable(Irlanda[0:10, 0:10], format = "html") %>%
kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE) %>%
add_header_above(c("Dados do PISA dos estudantes da Irlanda" = 10), color = "black", background = "orange") %>%
row_spec(row = 0, bold = TRUE, color = "white", background = "green") %>%
row_spec(row = 1:10, italic = TRUE) %>%
column_spec(column = 1:10, bold = TRUE)
tabela_estilo
# Usar: DT, kableExtra ou gt
Irlanda <- Irlanda %>% select(where(~ !all(is.na(.))))
dim(Irlanda)
nulos_percent <- Irlanda %>%
summarise_all(~ mean(is.na(.)) * 100)
colunas_com_nulos <- colnames(nulos_percent)[nulos_percent > 10]
colunas_com_nulos
Irlanda <- select(Irlanda, -one_of(colunas_com_nulos))
colunas_nao_numericas <- names(Irlanda)[!sapply(Irlanda, is.numeric)]
colunas_nao_numericas
valores_unicos <- lapply(Irlanda[colunas_nao_numericas], function(x) unname(unique(x)))
# Exibir os valores únicos de cada coluna
for (i in seq_along(valores_unicos)) {
coluna <- colunas_nao_numericas[i]
valores <- valores_unicos[[i]]
cat("Valores únicos da coluna", coluna, ":\n")
print(valores)
cat("\n")
}
Irlanda[colunas_nao_numericas] <- lapply(Irlanda[colunas_nao_numericas], as.factor)
Irlanda <- Irlanda %>% select_if(is.numeric)
my_skim <- skim_with(numeric = sfl("SEM" = plotrix::std.error,
"CV" = sjstats::cv,
"Mode" = ~ modeest::mlv1(., na.rm = T, method = "mfv"),
"sk" = ~ PerformanceAnalytics::skewness(.,na.rm=T,method = "sample"),
"ku" = ~ PerformanceAnalytics::kurtosis(., na.rm = T, method = "sample_excess")),
append = T)
Irlanda[, sapply(Irlanda, is.numeric)] %>%
my_skim() %>%
knitr::kable(digits=2, caption = 'Descriptives with histogram', col.names = c("Scale of Measurement","Item","$N_{missing}$","Complete prop.", "$M$","$SD$","$Min$","$P_{25}$", "$Mdn$","$P_{75}$", "$Max$", "Histogram","$SEM$", "$CV$","$Mode$", "$sk$","$ku$"), )
dim(Irlanda)
mcar_test(Irlanda[, 0:50])
# Apagar as linhas que possuem 20% das colunas nulas
null_percentage <- rowSums(is.na(Irlanda)) / ncol(Irlanda)
Irlanda <- Irlanda[null_percentage < 0.2, ]
dim(Irlanda)
IrlandaImput <- Irlanda %>% zap_labels() %>% mice(method = "norm.predict", m = 1)
IrlandaImput <- complete(IrlandaImput)
IrlandaNoImput <- Irlanda[complete.cases(Irlanda), ]
# Base de dados com os dados imputados
saveRDS(IrlandaImput, "IrlandaImput.rds")
# Base de dados com os dados omissos eliminados
saveRDS(IrlandaNoImput, "IrlandaNoImput.rds")
dados %>%
mutate(NumNulos = rowSums(is.na(.))) %>%
group_by(CNT) %>%
summarize(TotalNulos = sum(NumNulos),
NumEstudantes = n(),
PercentNulos = (TotalNulos / (NumLinhas * ncol(dados))) * 100,
MeanScience = mean(PV1SCIE, na.rm = TRUE),
MeanRead = mean(PV1READ, na.rm = TRUE),
MeanMath = mean(PV1MATH, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(NumLinhas))
dados <- readRDS(here("data", "STU_QQQ_5.rds"))
dados %>%
mutate(NumNulos = rowSums(is.na(.))) %>%
group_by(CNT) %>%
summarize(TotalNulos = sum(NumNulos),
NumEstudantes = n(),
PercentNulos = (TotalNulos / (NumLinhas * ncol(dados))) * 100,
MeanScience = mean(PV1SCIE, na.rm = TRUE),
MeanRead = mean(PV1READ, na.rm = TRUE),
MeanMath = mean(PV1MATH, na.rm = TRUE),
.groups = "drop") %>%
arrange(desc(NumLinhas))
dados %>%
dplyr::filter(CNT == "IRL") -> Irlanda
Irlanda
options(scipen = 999)
Irlanda %>%
summarise(across(where(is.labelled), \(x) attributes(x)$label)) %>%
tidylog::pivot_longer(everything(), names_to = "Column", values_to = "Description") %>%
rowwise() %>%
mutate(Type = sapply(Column, \(x) class(dados[[x]])[3])) %>%
mutate(First_5_Values = sapply(Column, \(x) paste(head(na.omit(dados[[x]]), 5) , collapse = ", "))) %>%
mutate(naPercent = sapply(Column, \(x) Irlanda %>% zap_labels() %>% .[[x]] %>% is.na() %>% mean %>% "*"(100) %>% round(2))) -> dfI.desc
dfI.desc %>% View()
dfI.desc
